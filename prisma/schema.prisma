generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Ledger {
  id              Int      @id @default(autoincrement())
  type            String
  accountId       Int
  drAmount        Float    @default(0)
  crAmount        Float    @default(0)
  details         String?
  opening_balance Float    @default(0)
  closing_balance Float    @default(0)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  referenceId     Int?
  referenceType   String?
  account         Account  @relation(fields: [accountId], references: [id])

  @@index([accountId], map: "Ledger_accountId_fkey")
}

model Journal {
  id              Int      @id @default(autoincrement())
  debitAccountId  Int
  creditAccountId Int
  amount          Float
  description     String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  creditAccount   Account  @relation("CreditAccount", fields: [creditAccountId], references: [id])
  debitAccount    Account  @relation("DebitAccount", fields: [debitAccountId], references: [id])

  @@index([creditAccountId], map: "Journal_creditAccountId_fkey")
  @@index([debitAccountId], map: "Journal_debitAccountId_fkey")
}

model Account {
  id             Int          @id @default(autoincrement())
  name           String
  phone          String?
  address        String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  balance        Float        @default(0)
  type           AccountType
  creditJournals Journal[]    @relation("CreditAccount")
  debitJournals  Journal[]    @relation("DebitAccount")
  ledgers        Ledger[]
  purchases      Purchase[]
  sales          Sale[]
}

model Sale {
  id          Int      @id @default(autoincrement())
  accountId   Int
  date        DateTime
  weight      Float
  rate        Float
  totalAmount Float
  preBalance  Float
  payment     Float
  balance     Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  account     Account  @relation(fields: [accountId], references: [id])

  @@index([accountId], map: "Sale_accountId_fkey")
}

model Purchase {
  id             Int      @id @default(autoincrement())
  accountId      Int
  date           DateTime
  weight         Float
  rate           Float
  totalManagment Float
  preBalance     Float
  payment        Float
  balance        Float
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  vehicleNumber  String   @default("N/A")
  account        Account  @relation(fields: [accountId], references: [id])

  @@index([accountId], map: "Purchase_accountId_fkey")
}

model User {
  id        Int      @id @default(autoincrement())
  fullName  String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  role      UserRole @default(USER)
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  SALESMAN
  USER
}

enum AccountType {
  CASH
  PARTY_ACCOUNT
  CUSTOMER_ACCOUNT
}
